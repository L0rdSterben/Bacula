Director {                            # define myself
  Name = bacula-dir
  DIRport = 9101                # where we listen for UA connections
  QueryFile = "/etc/bacula/query.sql"
  WorkingDirectory = "/var/spool/bacula"
  PidDirectory = "/var/run"
  Maximum Concurrent Jobs = 1
  Password = "{{bacula_password}}"         # Console password
  DirAddress = 0.0.0.0
}

#Джобы для бэкапа
{% for client in bacula_clients %}
Job {
  Name = "RemoteBackup-{{client.name}}"
  Type = Backup
  Level = Incremental
  Client = {{client.name}}
  FileSet = "{{client.FSname}}"
  Schedule = "Daily"
  Storage = File
  Pool = RemoteFile
  Messages = Standard
  Priority = 10
  Write Bootstrap = "/var/spool/bacula/%c.bsr"
}
{% endfor %}

#Джобы для рестора
{% for client in bacula_clients %}
Job {
  Name = "RestoreRemote-{{client.name}}"
  Type = Restore
  Client = {{client.name}}
  FileSet = "{{client.FSname}}"
  Storage = File
  Pool = RemoteFile
  Messages = Standard
  Where = /bacula/restore
}
{% endfor %}

#Параметры бэкапов
{% for client in bacula_clients %}
FileSet {
  Name = "{{client.FSname}}"
  Include {
    Options {
      signature = MD5
      compression = GZIP
    }
    File = {{client.dirfrombkp}}
  }
}
{% endfor %}

Schedule {
  Name = "Daily"
  Run = Full mon-sun at 01:00
}

#Клиенты
{% for client in bacula_clients %}
Client {
  Name = "{{client.name}}"
  Address = "{{client.address}}"
  FDPort = {{client.fdport}}
  Catalog = Postgres
  Password = "{{client.password}}"          # password for Remote FileDaemon
  File Retention = 30 days            # 30 days
  Job Retention = 6 months            # six months
  AutoPrune = yes                     # Prune expired Jobs/Files
}
{% endfor %}

# Definition of file storage device
Storage {
  Name = File
  Address = "{{bacula_storage_address}}"                # N.B. Use a fully qualified name here
  SDPort = 9103
  Password = "{{bacula_password}}"
  Device = NFSDevice
  Media Type = File
}

# Настройки для Postgres
Catalog {
  Name = Postgres
  dbname = "bacula"; dbuser = "bacula"; dbpassword = "{{bacula_pg_password}}"
  dbaddress = "{{bacula_addres_DB}}"; dbport = "5432"; dbsocket = ""
}

Messages {
  Name = Standard
  #mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: %t %e of %c %l\" %r"
  mailcommand = ""
  #operatorcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula: Intervention needed for %j\" %r"
  #mail = root@localhost = all, !skipped
  #operator = root@localhost = mount
  #console = all, !skipped, !saved
  #append = "/var/log/bacula/bacula.log" = all, !skipped
  #catalog = all
}

Messages {
  Name = Daemon
  mailcommand = "/usr/sbin/bsmtp -h localhost -f \"\(Bacula\) \<%r\>\" -s \"Bacula daemon message\" %r"
  mail = root@localhost = all, !skipped
  console = all, !skipped, !saved
  append = "/var/log/bacula/bacula.log" = all, !skipped
}

Pool {
  Name = RemoteFile
  Pool Type = Backup
  Recycle = yes                       # Bacula can automatically recycle Volumes
  Label Format = Remote-
  AutoPrune = yes                     # Prune expired volumes
  Volume Retention = 365 days         # one year
  Maximum Volume Bytes = 50G          # Limit Volume size to something reasonable
  Maximum Volumes = 100               # Limit number of Volumes in Pool
}

Console {
  Name = bacula-mon
  Password = "{{bacula_password}}"
  CommandACL = status, .status
}